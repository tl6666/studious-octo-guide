#!/usr/bin/env node

const fs = require('fs');
const program = require('commander');
const Wallet = require('../lib/wallet');

program
  .version(require('../package.json').version)
  .option('--path <path>', 'REQUIRED - Where wallet is stored')
  .option('--parse [parse]', 'OPTIONAL - A json string to parse in the form {"address": "mXy1234", privKey: "xxxxxxx"}')
  .option('--file [file]', 'OPTIONAL - A jsonl file with {"address": "mXy1234", privKey: "xxxxxxx"} in it')
  .parse(process.argv);

const getFileKeys = file => {
  let contents = fs.readFileSync(file).toString();
  let fileKeys = contents
    .split('\n')
    .filter(line => line !== '')
    .map(line => JSON.parse(line));
  return fileKeys;
};

const parseKeys = keys => {
  let parsed = JSON.parse(keys);
  if (typeof parsed === 'object') {
    return [parsed];
  } else {
    return parsed;
  }
};

const main = async () => {
  const { path, file, parse } = program;
  let wallet;
  try {
    wallet = await Wallet.loadWallet({ path });
    let keyInput = [];
    if (file) {
      keyInput = getFileKeys(file);
    } else if (parse) {
      keyInput = parseKeys(parse);
    }
    await wallet.importKeys({ keys: keyInput });
    console.log(`${keyInput.length} Key(s) Imported`);
  } catch (e) {
    console.error(e);
  }
};

main();
